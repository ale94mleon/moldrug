# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests

on:
  push:
    branches: [ "main" ]
    paths:
      - src/moldrug/**
      - .github/workflows/tests.yml
      - tests/**
      - pyproject.toml
      - setup.cfg
      - setup.py
  pull_request:
    branches: [ "main" ]
    paths:
      - moldrug/**
      - .github/workflows/tests.yml
      - tests/**
      - pyproject.toml
      - setup.cfg
      - setup.py

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest] #windows-latest (vina is not available for windows in conda-forge),m think about use bioconda autodock-vina
        python-version: [3.8, 3.9, '3.10', 3.11]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get AutoDock-Vina
      run: |
        python tests/get_vina.py
    - name: Install pip dependencies and moldrug on dev mode
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install -e .[dev]
        python -m pip install pytest-cov
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src/moldrug --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src/moldrug --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo after "Lint with flake8" My python version is actually: $(python --version).
    - name: Test with pytest
      run: |
        pytest tests --cov moldrug --cov-report xml
    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      if: github.event_name == 'push' && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml
